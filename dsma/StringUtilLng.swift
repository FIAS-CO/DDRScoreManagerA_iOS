//
//  StringUtilLng.swift
//  dsma
//
//  Created by LinaNfinE on 5/24/16.
//  Copyright © 2016 LinaNfinE. All rights reserved.
//

struct StringUtilLng {
    
    static func escapeWebMusicTitle(src: String) -> String {
        return src.replacingOccurrences(of: "&amp;", with: "&", options: [], range: nil).replacingOccurrences(of: "&AElig;", with: "Æ", options: [], range: nil).replacingOccurrences(of: "&quot;", with: "\"", options: [], range: nil).replacingOccurrences(of: "&dagger;", with: "†", options: [], range: nil).replacingOccurrences(of: "&lt;", with: "<", options: [], range: nil).replacingOccurrences(of: "&gt;", with: ">", options: [], range: nil).replacingOccurrences(of: "&apos;", with: "\'", options: [], range: nil).replacingOccurrences(of: "&iexcl;", with: "¡", options: [], range: nil).replacingOccurrences(of: "&cent;", with: "¢", options: [], range: nil).replacingOccurrences(of: "&pound;", with: "£", options: [], range: nil).replacingOccurrences(of: "&curren;", with: "¤", options: [], range: nil).replacingOccurrences(of: "&yen;", with: "¥", options: [], range: nil).replacingOccurrences(of: "&brvbar;", with: "¦", options: [], range: nil).replacingOccurrences(of: "&sect;", with: "§", options: [], range: nil).replacingOccurrences(of: "&uml;", with: "¨", options: [], range: nil).replacingOccurrences(of: "&copy;", with: "©", options: [], range: nil).replacingOccurrences(of: "&ordf;", with: "ª", options: [], range: nil).replacingOccurrences(of: "&laquo;", with: "«", options: [], range: nil).replacingOccurrences(of: "&not;", with: "¬", options: [], range: nil).replacingOccurrences(of: "&reg;", with: "®", options: [], range: nil).replacingOccurrences(of: "&macr;", with: "¯", options: [], range: nil).replacingOccurrences(of: "&deg;", with: "°", options: [], range: nil).replacingOccurrences(of: "&plusmn;", with: "±", options: [], range: nil).replacingOccurrences(of: "&sup2;", with: "²", options: [], range: nil).replacingOccurrences(of: "&sup3;", with: "³", options: [], range: nil).replacingOccurrences(of: "&acute;", with: "´", options: [], range: nil).replacingOccurrences(of: "&micro;", with: "µ", options: [], range: nil).replacingOccurrences(of: "&para;", with: "¶", options: [], range: nil).replacingOccurrences(of: "&middot;", with: "·", options: [], range: nil).replacingOccurrences(of: "&cedil;", with: "¸", options: [], range: nil).replacingOccurrences(of: "&sup1;", with: "¹", options: [], range: nil).replacingOccurrences(of: "&ordm;", with: "º", options: [], range: nil).replacingOccurrences(of: "&raquo;", with: "»", options: [], range: nil).replacingOccurrences(of: "&frac14;", with: "¼", options: [], range: nil).replacingOccurrences(of: "&frac12;", with: "½", options: [], range: nil).replacingOccurrences(of: "&frac34;", with: "¾", options: [], range: nil).replacingOccurrences(of: "&iquest;", with: "¿", options: [], range: nil).replacingOccurrences(of: "&Agrave;", with: "À", options: [], range: nil).replacingOccurrences(of: "&Aacute;", with: "Á", options: [], range: nil).replacingOccurrences(of: "&Acirc;", with: "Â", options: [], range: nil).replacingOccurrences(of: "&Atilde;", with: "Ã", options: [], range: nil).replacingOccurrences(of: "&Auml;", with: "Ä", options: [], range: nil).replacingOccurrences(of: "&Aring;", with: "Å", options: [], range: nil).replacingOccurrences(of: "&AElig;", with: "Æ", options: [], range: nil).replacingOccurrences(of: "&Ccedil;", with: "Ç", options: [], range: nil).replacingOccurrences(of: "&Egrave;", with: "È", options: [], range: nil).replacingOccurrences(of: "&Eacute;", with: "É", options: [], range: nil).replacingOccurrences(of: "&Ecirc;", with: "Ê", options: [], range: nil).replacingOccurrences(of: "&Euml;", with: "Ë", options: [], range: nil).replacingOccurrences(of: "&Igrave;", with: "Ì", options: [], range: nil).replacingOccurrences(of: "&Iacute;", with: "Í", options: [], range: nil).replacingOccurrences(of: "&Icirc;", with: "Î", options: [], range: nil).replacingOccurrences(of: "&Iuml;", with: "Ï", options: [], range: nil).replacingOccurrences(of: "&ETH;", with: "Ð", options: [], range: nil).replacingOccurrences(of: "&Ntilde;", with: "Ñ", options: [], range: nil).replacingOccurrences(of: "&Ograve;", with: "Ò", options: [], range: nil).replacingOccurrences(of: "&Oacute;", with: "Ó", options: [], range: nil).replacingOccurrences(of: "&Ocirc;", with: "Ô", options: [], range: nil).replacingOccurrences(of: "&Otilde;", with: "Õ", options: [], range: nil).replacingOccurrences(of: "&Ouml;", with: "Ö", options: [], range: nil).replacingOccurrences(of: "&times;", with: "×", options: [], range: nil).replacingOccurrences(of: "&Oslash;", with: "Ø", options: [], range: nil).replacingOccurrences(of: "&Ugrave;", with: "Ù", options: [], range: nil).replacingOccurrences(of: "&Uacute;", with: "Ú", options: [], range: nil).replacingOccurrences(of: "&Ucirc;", with: "Û", options: [], range: nil).replacingOccurrences(of: "&Uuml;", with: "Ü", options: [], range: nil).replacingOccurrences(of: "&Yacute;", with: "Ý", options: [], range: nil).replacingOccurrences(of: "&THORN;", with: "Þ", options: [], range: nil).replacingOccurrences(of: "&szlig;", with: "ß", options: [], range: nil).replacingOccurrences(of: "&agrave;", with: "à", options: [], range: nil).replacingOccurrences(of: "&aacute;", with: "á", options: [], range: nil).replacingOccurrences(of: "&acirc;", with: "â", options: [], range: nil).replacingOccurrences(of: "&atilde;", with: "ã", options: [], range: nil).replacingOccurrences(of: "&auml;", with: "ä", options: [], range: nil).replacingOccurrences(of: "&aring;", with: "å", options: [], range: nil).replacingOccurrences(of: "&aelig;", with: "æ", options: [], range: nil).replacingOccurrences(of: "&ccedil;", with: "ç", options: [], range: nil).replacingOccurrences(of: "&egrave;", with: "è", options: [], range: nil).replacingOccurrences(of: "&eacute;", with: "é", options: [], range: nil).replacingOccurrences(of: "&ecirc;", with: "ê", options: [], range: nil).replacingOccurrences(of: "&euml;", with: "ë", options: [], range: nil).replacingOccurrences(of: "&igrave;", with: "ì", options: [], range: nil).replacingOccurrences(of: "&iacute;", with: "í", options: [], range: nil).replacingOccurrences(of: "&icirc;", with: "î", options: [], range: nil).replacingOccurrences(of: "&iuml;", with: "ï", options: [], range: nil).replacingOccurrences(of: "&eth;", with: "ð", options: [], range: nil).replacingOccurrences(of: "&ntilde;", with: "ñ", options: [], range: nil).replacingOccurrences(of: "&ograve;", with: "ò", options: [], range: nil).replacingOccurrences(of: "&oacute;", with: "ó", options: [], range: nil).replacingOccurrences(of: "&ocirc;", with: "ô", options: [], range: nil).replacingOccurrences(of: "&otilde;", with: "õ", options: [], range: nil).replacingOccurrences(of: "&ouml;", with: "ö", options: [], range: nil).replacingOccurrences(of: "&divide;", with: "÷", options: [], range: nil).replacingOccurrences(of: "&oslash;", with: "ø", options: [], range: nil).replacingOccurrences(of: "&ugrave;", with: "ù", options: [], range: nil).replacingOccurrences(of: "&uacute;", with: "ú", options: [], range: nil).replacingOccurrences(of: "&ucirc;", with: "û", options: [], range: nil).replacingOccurrences(of: "&uuml;", with: "ü", options: [], range: nil).replacingOccurrences(of: "&yacute;", with: "ý", options: [], range: nil).replacingOccurrences(of: "&thorn;", with: "þ", options: [], range: nil).replacingOccurrences(of: "&yuml;", with: "ÿ", options: [], range: nil).replacingOccurrences(of: "&OElig;", with: "Œ", options: [], range: nil).replacingOccurrences(of: "&oelig;", with: "œ", options: [], range: nil).replacingOccurrences(of: "&Scaron;", with: "Š", options: [], range: nil).replacingOccurrences(of: "&scaron;", with: "š", options: [], range: nil).replacingOccurrences(of: "&Yuml;", with: "Ÿ", options: [], range: nil).replacingOccurrences(of: "&fnof;", with: "ƒ", options: [], range: nil).replacingOccurrences(of: "&circ;", with: "ˆ", options: [], range: nil).replacingOccurrences(of: "&tilde;", with: "˜", options: [], range: nil).replacingOccurrences(of: "&Alpha;", with: "Α", options: [], range: nil).replacingOccurrences(of: "&Beta;", with: "Β", options: [], range: nil).replacingOccurrences(of: "&Gamma;", with: "Γ", options: [], range: nil).replacingOccurrences(of: "&Delta;", with: "Δ", options: [], range: nil).replacingOccurrences(of: "&Epsilon;", with: "Ε", options: [], range: nil).replacingOccurrences(of: "&Zeta;", with: "Ζ", options: [], range: nil).replacingOccurrences(of: "&Eta;", with: "Η", options: [], range: nil).replacingOccurrences(of: "&Theta;", with: "Θ", options: [], range: nil).replacingOccurrences(of: "&Iota;", with: "Ι", options: [], range: nil).replacingOccurrences(of: "&Kappa;", with: "Κ", options: [], range: nil).replacingOccurrences(of: "&Lambda;", with: "Λ", options: [], range: nil).replacingOccurrences(of: "&Mu;", with: "Μ", options: [], range: nil).replacingOccurrences(of: "&Nu;", with: "Ν", options: [], range: nil).replacingOccurrences(of: "&Xi;", with: "Ξ", options: [], range: nil).replacingOccurrences(of: "&Omicron;", with: "Ο", options: [], range: nil).replacingOccurrences(of: "&Pi;", with: "Π", options: [], range: nil).replacingOccurrences(of: "&Rho;", with: "Ρ", options: [], range: nil).replacingOccurrences(of: "&Sigma;", with: "Σ", options: [], range: nil).replacingOccurrences(of: "&Tau;", with: "Τ", options: [], range: nil).replacingOccurrences(of: "&Upsilon;", with: "Υ", options: [], range: nil).replacingOccurrences(of: "&Phi;", with: "Φ", options: [], range: nil).replacingOccurrences(of: "&Chi;", with: "Χ", options: [], range: nil).replacingOccurrences(of: "&Psi;", with: "Ψ", options: [], range: nil).replacingOccurrences(of: "&Omega;", with: "Ω", options: [], range: nil).replacingOccurrences(of: "&alpha;", with: "α", options: [], range: nil).replacingOccurrences(of: "&beta;", with: "β", options: [], range: nil).replacingOccurrences(of: "&gamma;", with: "γ", options: [], range: nil).replacingOccurrences(of: "&delta;", with: "δ", options: [], range: nil).replacingOccurrences(of: "&epsilon;", with: "ε", options: [], range: nil).replacingOccurrences(of: "&zeta;", with: "ζ", options: [], range: nil).replacingOccurrences(of: "&eta;", with: "η", options: [], range: nil).replacingOccurrences(of: "&theta;", with: "θ", options: [], range: nil).replacingOccurrences(of: "&iota;", with: "ι", options: [], range: nil).replacingOccurrences(of: "&kappa;", with: "κ", options: [], range: nil).replacingOccurrences(of: "&lambda;", with: "λ", options: [], range: nil).replacingOccurrences(of: "&mu;", with: "μ", options: [], range: nil).replacingOccurrences(of: "&nu;", with: "ν", options: [], range: nil).replacingOccurrences(of: "&xi;", with: "ξ", options: [], range: nil).replacingOccurrences(of: "&omicron;", with: "ο", options: [], range: nil).replacingOccurrences(of: "&pi;", with: "π", options: [], range: nil).replacingOccurrences(of: "&rho;", with: "ρ", options: [], range: nil).replacingOccurrences(of: "&sigmaf;", with: "ς", options: [], range: nil).replacingOccurrences(of: "&sigma;", with: "σ", options: [], range: nil).replacingOccurrences(of: "&tau;", with: "τ", options: [], range: nil).replacingOccurrences(of: "&upsilon;", with: "υ", options: [], range: nil).replacingOccurrences(of: "&phi;", with: "φ", options: [], range: nil).replacingOccurrences(of: "&chi;", with: "χ", options: [], range: nil).replacingOccurrences(of: "&psi;", with: "ψ", options: [], range: nil).replacingOccurrences(of: "&omega;", with: "ω", options: [], range: nil).replacingOccurrences(of: "&thetasym;", with: "ϑ", options: [], range: nil).replacingOccurrences(of: "&upsih;", with: "ϒ", options: [], range: nil).replacingOccurrences(of: "&piv;", with: "ϖ", options: [], range: nil).replacingOccurrences(of: "&ndash;", with: "–", options: [], range: nil).replacingOccurrences(of: "&mdash;", with: "—", options: [], range: nil).replacingOccurrences(of: "&lsquo;", with: "‘", options: [], range: nil).replacingOccurrences(of: "&rsquo;", with: "’", options: [], range: nil).replacingOccurrences(of: "&sbquo;", with: "‚", options: [], range: nil).replacingOccurrences(of: "&ldquo;", with: "“", options: [], range: nil).replacingOccurrences(of: "&rdquo;", with: "”", options: [], range: nil).replacingOccurrences(of: "&bdquo;", with: "„", options: [], range: nil).replacingOccurrences(of: "&dagger;", with: "†", options: [], range: nil).replacingOccurrences(of: "&Dagger;", with: "‡", options: [], range: nil).replacingOccurrences(of: "&bull;", with: "•", options: [], range: nil).replacingOccurrences(of: "&hellip;", with: "…", options: [], range: nil).replacingOccurrences(of: "&permil;", with: "‰", options: [], range: nil).replacingOccurrences(of: "&prime;", with: "′", options: [], range: nil).replacingOccurrences(of: "&Prime;", with: "″", options: [], range: nil).replacingOccurrences(of: "&lsaquo;", with: "‹", options: [], range: nil).replacingOccurrences(of: "&rsaquo;", with: "›", options: [], range: nil).replacingOccurrences(of: "&oline;", with: "‾", options: [], range: nil).replacingOccurrences(of: "&frasl;", with: "⁄", options: [], range: nil).replacingOccurrences(of: "&euro;", with: "€", options: [], range: nil).replacingOccurrences(of: "&image;", with: "ℑ", options: [], range: nil).replacingOccurrences(of: "&weierp;", with: "℘", options: [], range: nil).replacingOccurrences(of: "&real;", with: "ℜ", options: [], range: nil).replacingOccurrences(of: "&trade;", with: "™", options: [], range: nil).replacingOccurrences(of: "&alefsym;", with: "ℵ", options: [], range: nil).replacingOccurrences(of: "&larr;", with: "←", options: [], range: nil).replacingOccurrences(of: "&uarr;", with: "↑", options: [], range: nil).replacingOccurrences(of: "&rarr;", with: "→", options: [], range: nil).replacingOccurrences(of: "&darr;", with: "↓", options: [], range: nil).replacingOccurrences(of: "&harr;", with: "↔", options: [], range: nil).replacingOccurrences(of: "&crarr;", with: "↵", options: [], range: nil).replacingOccurrences(of: "&lArr;", with: "⇐", options: [], range: nil).replacingOccurrences(of: "&uArr;", with: "⇑", options: [], range: nil).replacingOccurrences(of: "&rArr;", with: "⇒", options: [], range: nil).replacingOccurrences(of: "&dArr;", with: "⇓", options: [], range: nil).replacingOccurrences(of: "&hArr;", with: "⇔", options: [], range: nil).replacingOccurrences(of: "&forall;", with: "∀", options: [], range: nil).replacingOccurrences(of: "&part;", with: "∂", options: [], range: nil).replacingOccurrences(of: "&exist;", with: "∃", options: [], range: nil).replacingOccurrences(of: "&empty;", with: "∅", options: [], range: nil).replacingOccurrences(of: "&nabla;", with: "∇", options: [], range: nil).replacingOccurrences(of: "&isin;", with: "∈", options: [], range: nil).replacingOccurrences(of: "&notin;", with: "∉", options: [], range: nil).replacingOccurrences(of: "&ni;", with: "∋", options: [], range: nil).replacingOccurrences(of: "&prod;", with: "∏", options: [], range: nil).replacingOccurrences(of: "&sum;", with: "∑", options: [], range: nil).replacingOccurrences(of: "&minus;", with: "−", options: [], range: nil).replacingOccurrences(of: "&lowast;", with: "∗", options: [], range: nil).replacingOccurrences(of: "&radic;", with: "√", options: [], range: nil).replacingOccurrences(of: "&prop;", with: "∝", options: [], range: nil).replacingOccurrences(of: "&infin;", with: "∞", options: [], range: nil).replacingOccurrences(of: "&ang;", with: "∠", options: [], range: nil).replacingOccurrences(of: "&and;", with: "∧", options: [], range: nil).replacingOccurrences(of: "&or;", with: "∨", options: [], range: nil).replacingOccurrences(of: "&cap;", with: "∩", options: [], range: nil).replacingOccurrences(of: "&cup;", with: "∪", options: [], range: nil).replacingOccurrences(of: "&int;", with: "∫", options: [], range: nil).replacingOccurrences(of: "&there4;", with: "∴", options: [], range: nil).replacingOccurrences(of: "&sim;", with: "∼", options: [], range: nil).replacingOccurrences(of: "&cong;", with: "≅", options: [], range: nil).replacingOccurrences(of: "&asymp;", with: "≈", options: [], range: nil).replacingOccurrences(of: "&ne;", with: "≠", options: [], range: nil).replacingOccurrences(of: "&equiv;", with: "≡", options: [], range: nil).replacingOccurrences(of: "&le;", with: "≤", options: [], range: nil).replacingOccurrences(of: "&ge;", with: "≥", options: [], range: nil).replacingOccurrences(of: "&sub;", with: "⊂", options: [], range: nil).replacingOccurrences(of: "&sup;", with: "⊃", options: [], range: nil).replacingOccurrences(of: "&nsub;", with: "⊄", options: [], range: nil).replacingOccurrences(of: "&sube;", with: "⊆", options: [], range: nil).replacingOccurrences(of: "&supe;", with: "⊇", options: [], range: nil).replacingOccurrences(of: "&oplus;", with: "⊕", options: [], range: nil).replacingOccurrences(of: "&otimes;", with: "⊗", options: [], range: nil).replacingOccurrences(of: "&perp;", with: "⊥", options: [], range: nil).replacingOccurrences(of: "&sdot;", with: "⋅", options: [], range: nil).replacingOccurrences(of: "&lceil;", with: "⌈", options: [], range: nil).replacingOccurrences(of: "&rceil;", with: "⌉", options: [], range: nil).replacingOccurrences(of: "&lfloor;", with: "⌊", options: [], range: nil).replacingOccurrences(of: "&rfloor;", with: "⌋", options: [], range: nil).replacingOccurrences(of: "&lang;", with: "⟨", options: [], range: nil).replacingOccurrences(of: "&rang;", with: "⟩", options: [], range: nil).replacingOccurrences(of: "&loz;", with: "◊", options: [], range: nil).replacingOccurrences(of: "&spades;", with: "♠", options: [], range: nil).replacingOccurrences(of: "&clubs;", with: "♣", options: [], range: nil).replacingOccurrences(of: "&hearts;", with: "♥", options: [], range: nil).replacingOccurrences(of: "&diams;", with: "♦", options: [], range: nil).replacingOccurrences(of: "&#9834;", with: "♪", options: [], range: nil).replacingOccurrences(of: "&", with: "&amp;", options: [], range: nil).replacingOccurrences(of: "Æ", with: "&AElig;", options: [], range: nil).replacingOccurrences(of: "\"", with: "&quot;", options: [], range: nil).replacingOccurrences(of: "†", with: "&dagger;", options: [], range: nil).replacingOccurrences(of: "<", with: "&lt;", options: [], range: nil).replacingOccurrences(of: ">", with: "&gt;", options: [], range: nil).replacingOccurrences(of: "\'", with: "&apos;", options: [], range: nil).replacingOccurrences(of: "¡", with: "&iexcl;", options: [], range: nil).replacingOccurrences(of: "¢", with: "&cent;", options: [], range: nil).replacingOccurrences(of: "£", with: "&pound;", options: [], range: nil).replacingOccurrences(of: "¤", with: "&curren;", options: [], range: nil).replacingOccurrences(of: "¥", with: "&yen;", options: [], range: nil).replacingOccurrences(of: "¦", with: "&brvbar;", options: [], range: nil).replacingOccurrences(of: "§", with: "&sect;", options: [], range: nil).replacingOccurrences(of: "¨", with: "&uml;", options: [], range: nil).replacingOccurrences(of: "©", with: "&copy;", options: [], range: nil).replacingOccurrences(of: "ª", with: "&ordf;", options: [], range: nil).replacingOccurrences(of: "«", with: "&laquo;", options: [], range: nil).replacingOccurrences(of: "¬", with: "&not;", options: [], range: nil).replacingOccurrences(of: "®", with: "&reg;", options: [], range: nil).replacingOccurrences(of: "¯", with: "&macr;", options: [], range: nil).replacingOccurrences(of: "°", with: "&deg;", options: [], range: nil).replacingOccurrences(of: "±", with: "&plusmn;", options: [], range: nil).replacingOccurrences(of: "²", with: "&sup2;", options: [], range: nil).replacingOccurrences(of: "³", with: "&sup3;", options: [], range: nil).replacingOccurrences(of: "´", with: "&acute;", options: [], range: nil).replacingOccurrences(of: "µ", with: "&micro;", options: [], range: nil).replacingOccurrences(of: "¶", with: "&para;", options: [], range: nil).replacingOccurrences(of: "·", with: "&middot;", options: [], range: nil).replacingOccurrences(of: "¸", with: "&cedil;", options: [], range: nil).replacingOccurrences(of: "¹", with: "&sup1;", options: [], range: nil).replacingOccurrences(of: "º", with: "&ordm;", options: [], range: nil).replacingOccurrences(of: "»", with: "&raquo;", options: [], range: nil).replacingOccurrences(of: "¼", with: "&frac14;", options: [], range: nil).replacingOccurrences(of: "½", with: "&frac12;", options: [], range: nil).replacingOccurrences(of: "¾", with: "&frac34;", options: [], range: nil).replacingOccurrences(of: "¿", with: "&iquest;", options: [], range: nil).replacingOccurrences(of: "À", with: "&Agrave;", options: [], range: nil).replacingOccurrences(of: "Á", with: "&Aacute;", options: [], range: nil).replacingOccurrences(of: "Â", with: "&Acirc;", options: [], range: nil).replacingOccurrences(of: "Ã", with: "&Atilde;", options: [], range: nil).replacingOccurrences(of: "Ä", with: "&Auml;", options: [], range: nil).replacingOccurrences(of: "Å", with: "&Aring;", options: [], range: nil).replacingOccurrences(of: "Æ", with: "&AElig;", options: [], range: nil).replacingOccurrences(of: "Ç", with: "&Ccedil;", options: [], range: nil).replacingOccurrences(of: "È", with: "&Egrave;", options: [], range: nil).replacingOccurrences(of: "É", with: "&Eacute;", options: [], range: nil).replacingOccurrences(of: "Ê", with: "&Ecirc;", options: [], range: nil).replacingOccurrences(of: "Ë", with: "&Euml;", options: [], range: nil).replacingOccurrences(of: "Ì", with: "&Igrave;", options: [], range: nil).replacingOccurrences(of: "Í", with: "&Iacute;", options: [], range: nil).replacingOccurrences(of: "Î", with: "&Icirc;", options: [], range: nil).replacingOccurrences(of: "Ï", with: "&Iuml;", options: [], range: nil).replacingOccurrences(of: "Ð", with: "&ETH;", options: [], range: nil).replacingOccurrences(of: "Ñ", with: "&Ntilde;", options: [], range: nil).replacingOccurrences(of: "Ò", with: "&Ograve;", options: [], range: nil).replacingOccurrences(of: "Ó", with: "&Oacute;", options: [], range: nil).replacingOccurrences(of: "Ô", with: "&Ocirc;", options: [], range: nil).replacingOccurrences(of: "Õ", with: "&Otilde;", options: [], range: nil).replacingOccurrences(of: "Ö", with: "&Ouml;", options: [], range: nil).replacingOccurrences(of: "×", with: "&times;", options: [], range: nil).replacingOccurrences(of: "Ø", with: "&Oslash;", options: [], range: nil).replacingOccurrences(of: "Ù", with: "&Ugrave;", options: [], range: nil).replacingOccurrences(of: "Ú", with: "&Uacute;", options: [], range: nil).replacingOccurrences(of: "Û", with: "&Ucirc;", options: [], range: nil).replacingOccurrences(of: "Ü", with: "&Uuml;", options: [], range: nil).replacingOccurrences(of: "Ý", with: "&Yacute;", options: [], range: nil).replacingOccurrences(of: "Þ", with: "&THORN;", options: [], range: nil).replacingOccurrences(of: "ß", with: "&szlig;", options: [], range: nil).replacingOccurrences(of: "à", with: "&agrave;", options: [], range: nil).replacingOccurrences(of: "á", with: "&aacute;", options: [], range: nil).replacingOccurrences(of: "â", with: "&acirc;", options: [], range: nil).replacingOccurrences(of: "ã", with: "&atilde;", options: [], range: nil).replacingOccurrences(of: "ä", with: "&auml;", options: [], range: nil).replacingOccurrences(of: "å", with: "&aring;", options: [], range: nil).replacingOccurrences(of: "æ", with: "&aelig;", options: [], range: nil).replacingOccurrences(of: "ç", with: "&ccedil;", options: [], range: nil).replacingOccurrences(of: "è", with: "&egrave;", options: [], range: nil).replacingOccurrences(of: "é", with: "&eacute;", options: [], range: nil).replacingOccurrences(of: "ê", with: "&ecirc;", options: [], range: nil).replacingOccurrences(of: "ë", with: "&euml;", options: [], range: nil).replacingOccurrences(of: "ì", with: "&igrave;", options: [], range: nil).replacingOccurrences(of: "í", with: "&iacute;", options: [], range: nil).replacingOccurrences(of: "î", with: "&icirc;", options: [], range: nil).replacingOccurrences(of: "ï", with: "&iuml;", options: [], range: nil).replacingOccurrences(of: "ð", with: "&eth;", options: [], range: nil).replacingOccurrences(of: "ñ", with: "&ntilde;", options: [], range: nil).replacingOccurrences(of: "ò", with: "&ograve;", options: [], range: nil).replacingOccurrences(of: "ó", with: "&oacute;", options: [], range: nil).replacingOccurrences(of: "ô", with: "&ocirc;", options: [], range: nil).replacingOccurrences(of: "õ", with: "&otilde;", options: [], range: nil).replacingOccurrences(of: "ö", with: "&ouml;", options: [], range: nil).replacingOccurrences(of: "÷", with: "&divide;", options: [], range: nil).replacingOccurrences(of: "ø", with: "&oslash;", options: [], range: nil).replacingOccurrences(of: "ù", with: "&ugrave;", options: [], range: nil).replacingOccurrences(of: "ú", with: "&uacute;", options: [], range: nil).replacingOccurrences(of: "û", with: "&ucirc;", options: [], range: nil).replacingOccurrences(of: "ü", with: "&uuml;", options: [], range: nil).replacingOccurrences(of: "ý", with: "&yacute;", options: [], range: nil).replacingOccurrences(of: "þ", with: "&thorn;", options: [], range: nil).replacingOccurrences(of: "ÿ", with: "&yuml;", options: [], range: nil).replacingOccurrences(of: "Œ", with: "&OElig;", options: [], range: nil).replacingOccurrences(of: "œ", with: "&oelig;", options: [], range: nil).replacingOccurrences(of: "Š", with: "&Scaron;", options: [], range: nil).replacingOccurrences(of: "š", with: "&scaron;", options: [], range: nil).replacingOccurrences(of: "Ÿ", with: "&Yuml;", options: [], range: nil).replacingOccurrences(of: "ƒ", with: "&fnof;", options: [], range: nil).replacingOccurrences(of: "ˆ", with: "&circ;", options: [], range: nil).replacingOccurrences(of: "˜", with: "&tilde;", options: [], range: nil).replacingOccurrences(of: "Α", with: "&Alpha;", options: [], range: nil).replacingOccurrences(of: "Β", with: "&Beta;", options: [], range: nil).replacingOccurrences(of: "Γ", with: "&Gamma;", options: [], range: nil).replacingOccurrences(of: "Δ", with: "&Delta;", options: [], range: nil).replacingOccurrences(of: "Ε", with: "&Epsilon;", options: [], range: nil).replacingOccurrences(of: "Ζ", with: "&Zeta;", options: [], range: nil).replacingOccurrences(of: "Η", with: "&Eta;", options: [], range: nil).replacingOccurrences(of: "Θ", with: "&Theta;", options: [], range: nil).replacingOccurrences(of: "Ι", with: "&Iota;", options: [], range: nil).replacingOccurrences(of: "Κ", with: "&Kappa;", options: [], range: nil).replacingOccurrences(of: "Λ", with: "&Lambda;", options: [], range: nil).replacingOccurrences(of: "Μ", with: "&Mu;", options: [], range: nil).replacingOccurrences(of: "Ν", with: "&Nu;", options: [], range: nil).replacingOccurrences(of: "Ξ", with: "&Xi;", options: [], range: nil).replacingOccurrences(of: "Ο", with: "&Omicron;", options: [], range: nil).replacingOccurrences(of: "Π", with: "&Pi;", options: [], range: nil).replacingOccurrences(of: "Ρ", with: "&Rho;", options: [], range: nil).replacingOccurrences(of: "Σ", with: "&Sigma;", options: [], range: nil).replacingOccurrences(of: "Τ", with: "&Tau;", options: [], range: nil).replacingOccurrences(of: "Υ", with: "&Upsilon;", options: [], range: nil).replacingOccurrences(of: "Φ", with: "&Phi;", options: [], range: nil).replacingOccurrences(of: "Χ", with: "&Chi;", options: [], range: nil).replacingOccurrences(of: "Ψ", with: "&Psi;", options: [], range: nil).replacingOccurrences(of: "Ω", with: "&Omega;", options: [], range: nil).replacingOccurrences(of: "α", with: "&alpha;", options: [], range: nil).replacingOccurrences(of: "β", with: "&beta;", options: [], range: nil).replacingOccurrences(of: "γ", with: "&gamma;", options: [], range: nil).replacingOccurrences(of: "δ", with: "&delta;", options: [], range: nil).replacingOccurrences(of: "ε", with: "&epsilon;", options: [], range: nil).replacingOccurrences(of: "ζ", with: "&zeta;", options: [], range: nil).replacingOccurrences(of: "η", with: "&eta;", options: [], range: nil).replacingOccurrences(of: "θ", with: "&theta;", options: [], range: nil).replacingOccurrences(of: "ι", with: "&iota;", options: [], range: nil).replacingOccurrences(of: "κ", with: "&kappa;", options: [], range: nil).replacingOccurrences(of: "λ", with: "&lambda;", options: [], range: nil).replacingOccurrences(of: "μ", with: "&mu;", options: [], range: nil).replacingOccurrences(of: "ν", with: "&nu;", options: [], range: nil).replacingOccurrences(of: "ξ", with: "&xi;", options: [], range: nil).replacingOccurrences(of: "ο", with: "&omicron;", options: [], range: nil).replacingOccurrences(of: "π", with: "&pi;", options: [], range: nil).replacingOccurrences(of: "ρ", with: "&rho;", options: [], range: nil).replacingOccurrences(of: "ς", with: "&sigmaf;", options: [], range: nil).replacingOccurrences(of: "σ", with: "&sigma;", options: [], range: nil).replacingOccurrences(of: "τ", with: "&tau;", options: [], range: nil).replacingOccurrences(of: "υ", with: "&upsilon;", options: [], range: nil).replacingOccurrences(of: "φ", with: "&phi;", options: [], range: nil).replacingOccurrences(of: "χ", with: "&chi;", options: [], range: nil).replacingOccurrences(of: "ψ", with: "&psi;", options: [], range: nil).replacingOccurrences(of: "ω", with: "&omega;", options: [], range: nil).replacingOccurrences(of: "ϑ", with: "&thetasym;", options: [], range: nil).replacingOccurrences(of: "ϒ", with: "&upsih;", options: [], range: nil).replacingOccurrences(of: "ϖ", with: "&piv;", options: [], range: nil).replacingOccurrences(of: "–", with: "&ndash;", options: [], range: nil).replacingOccurrences(of: "—", with: "&mdash;", options: [], range: nil).replacingOccurrences(of: "‘", with: "&lsquo;", options: [], range: nil).replacingOccurrences(of: "’", with: "&rsquo;", options: [], range: nil).replacingOccurrences(of: "‚", with: "&sbquo;", options: [], range: nil).replacingOccurrences(of: "“", with: "&ldquo;", options: [], range: nil).replacingOccurrences(of: "”", with: "&rdquo;", options: [], range: nil).replacingOccurrences(of: "„", with: "&bdquo;", options: [], range: nil).replacingOccurrences(of: "†", with: "&dagger;", options: [], range: nil).replacingOccurrences(of: "‡", with: "&Dagger;", options: [], range: nil).replacingOccurrences(of: "•", with: "&bull;", options: [], range: nil).replacingOccurrences(of: "…", with: "&hellip;", options: [], range: nil).replacingOccurrences(of: "‰", with: "&permil;", options: [], range: nil).replacingOccurrences(of: "′", with: "&prime;", options: [], range: nil).replacingOccurrences(of: "″", with: "&Prime;", options: [], range: nil).replacingOccurrences(of: "‹", with: "&lsaquo;", options: [], range: nil).replacingOccurrences(of: "›", with: "&rsaquo;", options: [], range: nil).replacingOccurrences(of: "‾", with: "&oline;", options: [], range: nil).replacingOccurrences(of: "⁄", with: "&frasl;", options: [], range: nil).replacingOccurrences(of: "€", with: "&euro;", options: [], range: nil).replacingOccurrences(of: "ℑ", with: "&image;", options: [], range: nil).replacingOccurrences(of: "℘", with: "&weierp;", options: [], range: nil).replacingOccurrences(of: "ℜ", with: "&real;", options: [], range: nil).replacingOccurrences(of: "™", with: "&trade;", options: [], range: nil).replacingOccurrences(of: "ℵ", with: "&alefsym;", options: [], range: nil).replacingOccurrences(of: "←", with: "&larr;", options: [], range: nil).replacingOccurrences(of: "↑", with: "&uarr;", options: [], range: nil).replacingOccurrences(of: "→", with: "&rarr;", options: [], range: nil).replacingOccurrences(of: "↓", with: "&darr;", options: [], range: nil).replacingOccurrences(of: "↔", with: "&harr;", options: [], range: nil).replacingOccurrences(of: "↵", with: "&crarr;", options: [], range: nil).replacingOccurrences(of: "⇐", with: "&lArr;", options: [], range: nil).replacingOccurrences(of: "⇑", with: "&uArr;", options: [], range: nil).replacingOccurrences(of: "⇒", with: "&rArr;", options: [], range: nil).replacingOccurrences(of: "⇓", with: "&dArr;", options: [], range: nil).replacingOccurrences(of: "⇔", with: "&hArr;", options: [], range: nil).replacingOccurrences(of: "∀", with: "&forall;", options: [], range: nil).replacingOccurrences(of: "∂", with: "&part;", options: [], range: nil).replacingOccurrences(of: "∃", with: "&exist;", options: [], range: nil).replacingOccurrences(of: "∅", with: "&empty;", options: [], range: nil).replacingOccurrences(of: "∇", with: "&nabla;", options: [], range: nil).replacingOccurrences(of: "∈", with: "&isin;", options: [], range: nil).replacingOccurrences(of: "∉", with: "&notin;", options: [], range: nil).replacingOccurrences(of: "∋", with: "&ni;", options: [], range: nil).replacingOccurrences(of: "∏", with: "&prod;", options: [], range: nil).replacingOccurrences(of: "∑", with: "&sum;", options: [], range: nil).replacingOccurrences(of: "−", with: "&minus;", options: [], range: nil).replacingOccurrences(of: "∗", with: "&lowast;", options: [], range: nil).replacingOccurrences(of: "√", with: "&radic;", options: [], range: nil).replacingOccurrences(of: "∝", with: "&prop;", options: [], range: nil).replacingOccurrences(of: "∞", with: "&infin;", options: [], range: nil).replacingOccurrences(of: "∠", with: "&ang;", options: [], range: nil).replacingOccurrences(of: "∧", with: "&and;", options: [], range: nil).replacingOccurrences(of: "∨", with: "&or;", options: [], range: nil).replacingOccurrences(of: "∩", with: "&cap;", options: [], range: nil).replacingOccurrences(of: "∪", with: "&cup;", options: [], range: nil).replacingOccurrences(of: "∫", with: "&int;", options: [], range: nil).replacingOccurrences(of: "∴", with: "&there4;", options: [], range: nil).replacingOccurrences(of: "∼", with: "&sim;", options: [], range: nil).replacingOccurrences(of: "≅", with: "&cong;", options: [], range: nil).replacingOccurrences(of: "≈", with: "&asymp;", options: [], range: nil).replacingOccurrences(of: "≠", with: "&ne;", options: [], range: nil).replacingOccurrences(of: "≡", with: "&equiv;", options: [], range: nil).replacingOccurrences(of: "≤", with: "&le;", options: [], range: nil).replacingOccurrences(of: "≥", with: "&ge;", options: [], range: nil).replacingOccurrences(of: "⊂", with: "&sub;", options: [], range: nil).replacingOccurrences(of: "⊃", with: "&sup;", options: [], range: nil).replacingOccurrences(of: "⊄", with: "&nsub;", options: [], range: nil).replacingOccurrences(of: "⊆", with: "&sube;", options: [], range: nil).replacingOccurrences(of: "⊇", with: "&supe;", options: [], range: nil).replacingOccurrences(of: "⊕", with: "&oplus;", options: [], range: nil).replacingOccurrences(of: "⊗", with: "&otimes;", options: [], range: nil).replacingOccurrences(of: "⊥", with: "&perp;", options: [], range: nil).replacingOccurrences(of: "⋅", with: "&sdot;", options: [], range: nil).replacingOccurrences(of: "⌈", with: "&lceil;", options: [], range: nil).replacingOccurrences(of: "⌉", with: "&rceil;", options: [], range: nil).replacingOccurrences(of: "⌊", with: "&lfloor;", options: [], range: nil).replacingOccurrences(of: "⌋", with: "&rfloor;", options: [], range: nil).replacingOccurrences(of: "⟨", with: "&lang;", options: [], range: nil).replacingOccurrences(of: "⟩", with: "&rang;", options: [], range: nil).replacingOccurrences(of: "◊", with: "&loz;", options: [], range: nil).replacingOccurrences(of: "♠", with: "&spades;", options: [], range: nil).replacingOccurrences(of: "♣", with: "&clubs;", options: [], range: nil).replacingOccurrences(of: "♥", with: "&hearts;", options: [], range: nil).replacingOccurrences(of: "♦", with: "&diams;", options: [], range: nil).replacingOccurrences(of: "♪", with: "&#9834;", options: [], range: nil)
    }
    
}
